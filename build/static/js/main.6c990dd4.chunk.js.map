{"version":3,"sources":["Components/Login.js","Pages/LoginSignup.js","Components/TasksView.js","Components/CreateTask.js","Pages/RouterPaths.js","App.js","index.js"],"names":["Login","props","useState","userName","setUserName","password","setPassword","className","type","placeholder","onChange","event","target","value","onClick","handleLogin","alert","LoginSignup","valuesCell","TasksView","tasks","setTasks","authToken","useEffect","fetchTasks","a","fetch","method","headers","response","json","taskData","error","grid","data","field","title","cell","history","push","handleLogout","CreateTask","rows","setRows","taskName","setTaskName","taskCategory","setTaskCategory","taskDesc","setTaskDesc","taskValues","setTaskValues","rowId","setRowId","handleSave","task","values","JSON","parse","stringify","filter","val","propName","propValue","body","handleChange","e","index","parseInt","id","vals","name","style","width","key","joined","concat","RouterPaths","path","exact","component","App","localStorage","getItem","user","userData","setUserData","loginCredentials","initializeLocalStorage","responseJson","emptyLocalStorage","clear","setItem","token","pageToShow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c990dd4.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport './Login.css'\r\n\r\nfunction Login(props) {\r\n    const [userName,setUserName] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n\r\n    const handleUserNameChange = function(event){\r\n        setUserName(event.target.value);\r\n    };\r\n    const handlePasswordChange = function(event){\r\n        setPassword(event.target.value);\r\n    };\r\n\r\n    const handleLogin = function(){\r\n        if(userName!=\"\" && password!=\"\")\r\n            props.handleLogin({userName,password});\r\n        else\r\n            alert('All fields are compulsory!');\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4 col-lg-4 col-md-4\"></div>\r\n                <div className=\"title\">EasyMaintain Login</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4 col-lg-4 col-md-4\"></div>\r\n                <label className=\"col-sm-1 col-lg-1 col-md-1 labelClass\">UserName</label>\r\n                <div className=\"col-sm-4 col-lg-4 col-md-4\">\r\n                    <input type=\"text\" placeholder=\"Enter your username\" onChange={handleUserNameChange}></input>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4 col-lg-4 col-md-4\"></div>\r\n                <label className=\"col-sm-1 col-lg-1 col-md-1 labelClass\">Password</label>\r\n                <div className=\"col-sm-4 col-lg-4 col-md-4\">\r\n                    <input type=\"password\" placeholder=\"Enter your password\" onChange={handlePasswordChange}></input>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6 col-lg-6 col-md-6\">\r\n                    <button className=\"btn btn-primary float-right login-btn\" onClick={handleLogin}>Login</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport Login from \"../Components/Login\";\r\n\r\nfunction LoginSignup(props) {\r\n    return (\r\n        <div>\r\n            <Login handleLogin={props.handleLogin}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginSignup\r\n","import React,{useState,useEffect} from 'react';\r\nimport './TasksView.css'\r\nimport \"@progress/kendo-theme-material/dist/all.css\";\r\nimport { Grid, GridColumn } from \"@progress/kendo-react-grid\";\r\n\r\nconst valuesCell = (props) => {\r\n    return (\r\n      <td><button className=\"btn btn-primary\">Edit</button></td>\r\n    )\r\n} \r\n\r\nfunction TasksView(props) {\r\n    const [tasks, setTasks] = useState([]);\r\n    const authToken = props.authToken;\r\n    //const user = props.user;\r\n\r\n    useEffect(() => {\r\n        fetchTasks();\r\n    }, []);\r\n\r\n    const fetchTasks = async function(){\r\n        const response = await fetch('/tasks',{\r\n            method: 'GET', \r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n             authToken: authToken\r\n            },\r\n        });\r\n        const taskData = await response.json();\r\n        if(taskData.error){\r\n            alert(taskData.error);\r\n        }\r\n        else{\r\n            setTasks(taskData);\r\n        }\r\n    }\r\n\r\n    const handleLogout = function(){\r\n        props.handleLogout();\r\n    };\r\n\r\n    const handleCreate = function(){\r\n        props.history.push('/create-task');\r\n    }\r\n\r\n    const grid = <Grid\r\n    data={tasks}\r\n    >\r\n    <GridColumn field=\"taskName\" title=\"Name\" />\r\n    <GridColumn field=\"taskCategory\" title=\"Category\" />\r\n    <GridColumn field=\"taskDescription\" title=\"Description\" />\r\n    <GridColumn field=\"taskValues\" title=\"Actions\" cell={valuesCell}/>\r\n  </Grid>\r\n\r\n    return (\r\n        <div className=\"tasks-page\">\r\n            <div className=\"row records\">\r\n                <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                    <label className=\"records-label\">Records</label>\r\n                </div>\r\n                <div className=\"col-md-6 col-sm-6 col-lg-6\"></div>\r\n                <div className=\"col-md-2 col-sm-2 col-lg-2\">\r\n                    <button className=\"btn btn-primary record-button\" onClick={handleCreate} >Create a Record</button>\r\n                </div>\r\n                <div className=\"col-md-1 col-sm-1 col-lg-1\">\r\n                    <button className=\"btn btn-primary\" onClick={handleLogout}>Logout</button>\r\n                </div>\r\n            </div>\r\n            {grid}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TasksView\r\n","import React, {useState} from 'react'\r\nimport RouterPaths from '../Pages/RouterPaths'\r\nimport TasksView from './TasksView';\r\nimport './TasksView.css'\r\n\r\nfunction CreateTask(props) {\r\n    const [rows, setRows] = useState([]);\r\n    const [taskName, setTaskName] = useState('');\r\n    const [taskCategory, setTaskCategory] = useState('');\r\n    const [taskDesc, setTaskDesc] = useState('');\r\n    const [taskValues, setTaskValues] = useState([]);\r\n    const [rowId, setRowId] = useState(0);\r\n    \r\n    const handleSave = async function(){ \r\n        if(taskName==\"\" || taskCategory==\"\" || taskDesc==\"\")\r\n            alert('Record Name, Category and Description are mandatory');\r\n        else{\r\n            var task = {};\r\n            task.taskName = taskName;\r\n            task.taskCategory = taskCategory;\r\n            task.taskDesc = taskDesc;\r\n            var values = JSON.parse(JSON.stringify(taskValues));\r\n            values = values.filter( val => (val.propName!==\"\" || val.propValue!==\"\"));\r\n            task.taskValues = values;\r\n            const response = await fetch('/tasks', {\r\n                method: 'POST', \r\n                headers: {\r\n                'Content-Type': 'application/json',\r\n                 authToken: props.authToken\r\n                },\r\n                body: JSON.stringify(task)\r\n            });\r\n    \r\n            const data = await response.json();\r\n            if(data.error){\r\n                alert(data.error);\r\n            }else{\r\n                props.history.push(\"/tasks\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const appendRow = function(e){\r\n        const key = rowId;\r\n        var joined = rows.concat(\r\n            <tr>\r\n                <td>\r\n                    <input name='propName' id={key} onChange={handleChange} type=\"text\"></input>\r\n                </td>\r\n                <td>\r\n                    <input name=\"propValue\" id={key} onChange={handleChange} type=\"text\" style={{width:'450px'}}></input>\r\n                </td>\r\n            </tr>\r\n        )\r\n        setRows(joined);\r\n        const vals = taskValues;\r\n        vals.push({id : key, propName : '', propValue:''});\r\n        setTaskValues(vals);\r\n        setRowId(key+1);\r\n    }\r\n\r\n    const appendRowArea = function(e){\r\n        const key = rowId;\r\n        var joined = rows.concat(\r\n            <tr>\r\n                <td>\r\n                    <input name='propName' id={key} onChange={handleChange} type=\"text\"></input>\r\n                </td>\r\n                <td>\r\n                    <textarea name=\"propValue\" id={key} onChange={handleChange} type=\"text\" style={{width:'450px'}}></textarea>\r\n                </td>\r\n            </tr>\r\n        )\r\n        setRows(joined);\r\n        const vals = taskValues;\r\n        vals.push({id : key, propName : '', propValue:''});\r\n        setTaskValues(vals);\r\n        setRowId(key+1);\r\n    }\r\n\r\n    const handleChange = function(e){\r\n        var val = e.target.value;\r\n        var index = parseInt(e.target.id);\r\n        var vals = taskValues;\r\n        if(e.target.name==\"propName\")\r\n            vals[index].propName = e.target.value;\r\n        else if(e.target.name=\"propValue\")\r\n            vals[index].propValue = e.target.value;\r\n        setTaskValues(vals);\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-tasks-page\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 col-lg-3 col-sm-3\">\r\n                    <label className=\"create-task-label\">Create Record</label>\r\n                </div>\r\n                <div className=\"col-md-7 col-lg-7 col-sm-7\"></div>\r\n                <div className=\"col-md-2 col-sm-2 col-lg-2\">\r\n                    <button className=\"btn btn-primary save-button\" onClick={handleSave}>Save</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row create-task-input\">\r\n                <div className=\"col-md-1 col-lg-1 col-sm-1\"></div>\r\n                <div className=\"col-md-10 col-lg-10 col-sm-10\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 col-sm-2 col-lg-2\">\r\n                            <label>Record Name</label>\r\n                        </div>\r\n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                            <input type=\"text\" onChange = { e => setTaskName(e.target.value)}></input>\r\n                        </div>\r\n                        <div className=\"col-md-7 col-sm-7 col-lg-7\"></div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 col-sm-2 col-lg-2\">\r\n                            <label>Record Category</label>\r\n                        </div>\r\n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                            <input onChange = { e => setTaskCategory(e.target.value)} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"col-md-7 col-sm-7 col-lg-7\"></div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 col-sm-2 col-lg-2\">\r\n                            <label>Record Description</label>\r\n                        </div>\r\n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                            <input onChange = { e => setTaskDesc(e.target.value)} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"col-md-7 col-sm-7 col-lg-7\"></div>\r\n                    </div>\r\n                    <div>\r\n                        <label>Record Values:</label>\r\n                    </div>\r\n                    <div className=\"values-table\">\r\n                        <table>\r\n                            <thead>\r\n                                <th style={{width: '300px'}}>Property Name</th>\r\n                                <th style={{width: '600px'}}>Property Value</th>\r\n                            </thead>\r\n                            <tbody>\r\n                                {rows}\r\n                            </tbody>\r\n                        </table>\r\n                        <button className=\"btn btn-primary add-button\" onClick={appendRow}>Add Row with TextBox</button>\r\n                        <button className=\"btn btn-primary add-area\" onClick={appendRowArea}>Add Row with TextArea</button>\r\n                    </div>   \r\n                </div>\r\n                <div className=\"col-md-1 col-sm-1 col-lg-1\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateTask\r\n","import React from 'react'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport CreateTask from '../Components/CreateTask'\r\nimport TasksView from '../Components/TasksView'\r\n\r\nfunction RouterPaths() {\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path='/' exact component={TasksView}/>\r\n                    <Route path='/tasks' exact component={TasksView}/>\r\n                    <Route path='/create-task' exact component={CreateTask}/>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RouterPaths\r\n","import React, {useState} from 'react'\nimport './App.css';\nimport LoginSignup from './Pages/LoginSignup'\nimport TasksView from './Components/TasksView'\nimport RouterPaths from './Pages/RouterPaths'\n\nfunction App() {\n\n  const [userData,setUserData] = useState({\n    authToken:localStorage.getItem(\"authToken\"),\n    user:JSON.parse(localStorage.getItem(\"user\")),\n  });\n\n  const handleLogin = async function(loginCredentials){\n    const response = await fetch('/users/login', {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json',\n            }, \n            body: JSON.stringify(loginCredentials)\n        });\n      const userData = await response.json()\n      if(userData.error){\n        alert(userData.error)\n      }else{\n        initializeLocalStorage(userData);\n      }\n  }\n\n  const handleLogout = async function(){\n    const response = await fetch('/users/logout', {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json',\n            authToken : localStorage.getItem(\"authToken\")\n            }, \n        });\n    const responseJson = await response.json();\n    if(responseJson.error){\n      alert(responseJson.error);\n    }else{\n      emptyLocalStorage();\n    }        \n  }\n\n  const emptyLocalStorage = function(){\n    localStorage.clear();\n    setUserData({});\n  }\n\n  const initializeLocalStorage = function(userData){\n    localStorage.setItem(\"authToken\",userData.token);\n    localStorage.setItem(\"user\",JSON.stringify(userData.user));\n    setUserData({\n      authToken:userData.token,\n      user:userData.user\n    });\n  }\n\n  const pageToShow = \n    (userData.authToken && userData.user) ?\n       <RouterPaths authToken={userData.authToken} user={userData.user} handleLogout={handleLogout} />\n    :\n       <LoginSignup handleLogin={handleLogin} />\n\n  return (\n    <div className=\"App\">\n      {pageToShow}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}