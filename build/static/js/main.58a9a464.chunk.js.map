{"version":3,"sources":["Components/Login.js","Pages/LoginSignup.js","Components/UserContext.js","Components/CreateTask.js","Components/TasksView.js","Pages/RouterPaths.js","App.js","index.js"],"names":["Login","props","useState","userName","setUserName","password","setPassword","className","type","placeholder","onChange","event","target","value","onClick","handleLogin","alert","LoginSignup","UserContext","React","createContext","authToken","user","CreateTask","rows","setRows","taskName","setTaskName","taskCategory","setTaskCategory","taskDesc","setTaskDesc","taskValues","setTaskValues","rowId","setRowId","useContext","taskId","useParams","useEffect","fetchTaskById","a","fetch","method","headers","response","json","taskData","error","taskDescription","showValues","values","i","tableRows","vals","length","key","concat","name","id","propName","handleChange","propValue","style","width","push","handleSave","task","JSON","parse","stringify","filter","val","body","data","history","e","index","parseInt","joined","TasksView","tasks","setTasks","fetchTasks","products","columns","dataField","text","formatter","cell","row","_id","handleEdit","handleLogout","keyField","RouterPaths","path","exact","component","App","localStorage","getItem","userData","setUserData","loginCredentials","initializeLocalStorage","responseJson","emptyLocalStorage","clear","setItem","token","pageToShow","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58a9a464.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport './Login.css'\r\n\r\nfunction Login(props) {\r\n    const [userName,setUserName] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n\r\n    const handleUserNameChange = function(event){\r\n        setUserName(event.target.value);\r\n    };\r\n    const handlePasswordChange = function(event){\r\n        setPassword(event.target.value);\r\n    };\r\n\r\n    const handleLogin = function(){\r\n        if(userName!=\"\" && password!=\"\")\r\n            props.handleLogin({userName,password});\r\n        else\r\n            alert('All fields are compulsory!');\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4 col-lg-4 col-md-4\"></div>\r\n                <div className=\"title\">EasyMaintain Login</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4 col-lg-4 col-md-4\"></div>\r\n                <label className=\"col-sm-1 col-lg-1 col-md-1 labelClass\">UserName</label>\r\n                <div className=\"col-sm-4 col-lg-4 col-md-4\">\r\n                    <input type=\"text\" placeholder=\"Enter your username\" onChange={handleUserNameChange}></input>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4 col-lg-4 col-md-4\"></div>\r\n                <label className=\"col-sm-1 col-lg-1 col-md-1 labelClass\">Password</label>\r\n                <div className=\"col-sm-4 col-lg-4 col-md-4\">\r\n                    <input type=\"password\" placeholder=\"Enter your password\" onChange={handlePasswordChange}></input>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6 col-lg-6 col-md-6\">\r\n                    <button className=\"btn btn-primary float-right login-btn\" onClick={handleLogin}>Login</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport Login from \"../Components/Login\";\r\n\r\nfunction LoginSignup(props) {\r\n    return (\r\n        <div>\r\n            <Login handleLogin={props.handleLogin}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginSignup\r\n","import React from \"react\";\r\n\r\nconst UserContext = React.createContext({\r\n    authToken:\"\",\r\n    user:{}\r\n});\r\n\r\nexport default UserContext;","import React, {useState,useContext, useEffect} from 'react'\r\nimport './TasksView.css'\r\nimport UserContext from \"./UserContext\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nfunction CreateTask(props) {\r\n    const [rows, setRows] = useState([]);\r\n    const [taskName, setTaskName] = useState('');\r\n    const [taskCategory, setTaskCategory] = useState('');\r\n    const [taskDesc, setTaskDesc] = useState('');\r\n    const [taskValues, setTaskValues] = useState([]);\r\n    const [rowId, setRowId] = useState(0);\r\n    const {authToken}=useContext(UserContext);\r\n    const {taskId} = useParams();\r\n\r\n    useEffect(() => {\r\n        if(taskId){\r\n            fetchTaskById();\r\n        }\r\n    },[])\r\n\r\n    const fetchTaskById = async function(){\r\n        const response = await fetch(`/tasks/${taskId}`, {\r\n            method: 'GET', \r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n             authToken: authToken\r\n            },\r\n        });\r\n        const taskData = await response.json();\r\n        if(taskData.error){\r\n            alert(taskData.error);\r\n        }else{\r\n            setTaskName(taskData.taskName)\r\n            setTaskCategory(taskData.taskCategory)\r\n            setTaskDesc(taskData.taskDescription)\r\n            showValues(taskData.taskValues)\r\n        }\r\n    }\r\n\r\n    const showValues = function(values){\r\n        var i=0;\r\n        var tableRows =[];\r\n        var vals = [];\r\n        for(i;i<values.length;i++){\r\n            const key = i;\r\n            tableRows = tableRows.concat(\r\n                <tr>\r\n                    <td>\r\n                        <input name='propName' id={key} value={values[i].propName} onChange={handleChange} type=\"text\"></input>\r\n                    </td>\r\n                    <td>\r\n                        <input name=\"propValue\" id={key} value={values[i].propValue} onChange={handleChange} type=\"text\" style={{width:'450px'}}></input>\r\n                    </td>\r\n                </tr>\r\n            )\r\n            vals.push({id : key, propName : values[i].propName, propValue:values[i].propName});\r\n        }\r\n        setRowId(i);\r\n        setRows(tableRows);\r\n        setTaskValues(vals);\r\n    }\r\n    \r\n    const handleSave = async function(){ \r\n        if(taskName==\"\" || taskCategory==\"\" || taskDesc==\"\")\r\n            alert('Record Name, Category and Description are mandatory');\r\n        else{\r\n            var task = {};\r\n            task.taskName = taskName;\r\n            task.taskCategory = taskCategory;\r\n            task.taskDescription = taskDesc;\r\n            var values = JSON.parse(JSON.stringify(taskValues));\r\n            values = values.filter( val => (val.propName!==\"\" || val.propValue!==\"\"));\r\n            task.taskValues = values;\r\n            var response;\r\n            if(taskId){\r\n                response = await fetch(`/tasks/${taskId}`, {\r\n                    method: 'PATCH', \r\n                    headers: {\r\n                    'Content-Type': 'application/json',\r\n                     authToken: authToken\r\n                    },\r\n                    body: JSON.stringify(task)\r\n                });\r\n            }\r\n            else{\r\n                response = await fetch('/tasks', {\r\n                    method: 'POST', \r\n                    headers: {\r\n                    'Content-Type': 'application/json',\r\n                     authToken: authToken\r\n                    },\r\n                    body: JSON.stringify(task)\r\n                });\r\n            }\r\n    \r\n            const data = await response.json();\r\n            if(data.error){\r\n                alert(data.error);\r\n            }else{\r\n                props.history.push(\"/tasks\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const appendRow = function(e){\r\n        const key = rowId;\r\n        var joined = rows.concat(\r\n            <tr>\r\n                <td>\r\n                    <input name='propName' id={key} onChange={handleChange} type=\"text\"></input>\r\n                </td>\r\n                <td>\r\n                    <input name=\"propValue\" id={key} onChange={handleChange} type=\"text\" style={{width:'450px'}}></input>\r\n                </td>\r\n            </tr>\r\n        )\r\n        setRows(joined);\r\n        const vals = taskValues;\r\n        vals.push({id : key, propName : '', propValue:''});\r\n        setTaskValues(vals);\r\n        setRowId(key+1);\r\n    }\r\n\r\n    const appendRowArea = function(e){\r\n        const key = rowId;\r\n        var joined = rows.concat(\r\n            <tr>\r\n                <td>\r\n                    <input name='propName' id={key} onChange={handleChange} type=\"text\"></input>\r\n                </td>\r\n                <td>\r\n                    <textarea name=\"propValue\" id={key} onChange={handleChange} type=\"text\" style={{width:'450px'}}></textarea>\r\n                </td>\r\n            </tr>\r\n        )\r\n        setRows(joined);\r\n        const vals = taskValues;\r\n        vals.push({id : key, propName : '', propValue:''});\r\n        setTaskValues(vals);\r\n        setRowId(key+1);\r\n    }\r\n\r\n    const handleChange = function(e){\r\n        var val = e.target.value;\r\n        var index = parseInt(e.target.id);\r\n        var vals = taskValues;\r\n        if(e.target.name==\"propName\")\r\n            vals[index].propName = e.target.value;\r\n        else if(e.target.name=\"propValue\")\r\n            vals[index].propValue = e.target.value;\r\n        setTaskValues(vals);\r\n    }\r\n\r\n    const handleBack = function(e){\r\n        props.history.push('/tasks');\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-tasks-page\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 col-lg-3 col-sm-3\">\r\n                    <label className=\"create-task-label\">Create Record</label>\r\n                </div>\r\n                <div className=\"col-md-6 col-lg-6 col-sm-6\"></div>\r\n                <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                    <button className=\"btn btn-primary save-button\" onClick={handleSave}>Save</button>\r\n                    <button className=\"btn btn-primary save-button\" onClick={handleBack}>Back</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row create-task-input\">\r\n                <div className=\"col-md-1 col-lg-1 col-sm-1\"></div>\r\n                <div className=\"col-md-10 col-lg-10 col-sm-10\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 col-sm-2 col-lg-2\">\r\n                            <label>Record Name</label>\r\n                        </div>\r\n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                            <input type=\"text\" value={taskName} onChange = { e => setTaskName(e.target.value)}></input>\r\n                        </div>\r\n                        <div className=\"col-md-7 col-sm-7 col-lg-7\"></div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 col-sm-2 col-lg-2\">\r\n                            <label>Record Category</label>\r\n                        </div>\r\n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                            <input value={taskCategory} onChange = { e => setTaskCategory(e.target.value)} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"col-md-7 col-sm-7 col-lg-7\"></div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 col-sm-2 col-lg-2\">\r\n                            <label>Record Description</label>\r\n                        </div>\r\n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                            <input value={taskDesc} onChange = { e => setTaskDesc(e.target.value)} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"col-md-7 col-sm-7 col-lg-7\"></div>\r\n                    </div>\r\n                    <div>\r\n                        <label>Record Values:</label>\r\n                    </div>\r\n                    <div className=\"values-table\">\r\n                        <table>\r\n                            <thead>\r\n                                <th style={{width: '300px'}}>Property Name</th>\r\n                                <th style={{width: '600px'}}>Property Value</th>\r\n                            </thead>\r\n                            <tbody>\r\n                                {rows}\r\n                            </tbody>\r\n                        </table>\r\n                        <button className=\"btn btn-primary add-button\" onClick={appendRow}>Add Row with TextBox</button>\r\n                        <button className=\"btn btn-primary add-area\" onClick={appendRowArea}>Add Row with TextArea</button>\r\n                    </div>   \r\n                </div>\r\n                <div className=\"col-md-1 col-sm-1 col-lg-1\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateTask\r\n","import React,{useState,useEffect,useContext} from 'react';\r\nimport './TasksView.css'\r\nimport \"@progress/kendo-theme-material/dist/all.css\";\r\nimport { Grid, GridColumn } from \"@progress/kendo-react-grid\";\r\nimport UserContext from \"./UserContext\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\n\r\nfunction TasksView(props) {\r\n    const [tasks, setTasks] = useState([]);\r\n    const {authToken,user}=useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        fetchTasks();\r\n    }, []);\r\n\r\n    const fetchTasks = async function(){\r\n        const response = await fetch('/tasks',{\r\n            method: 'GET', \r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n             authToken: authToken\r\n            },\r\n        });\r\n        const taskData = await response.json();\r\n        if(taskData.error){\r\n            alert(taskData.error);\r\n        }\r\n        else{\r\n            setTasks(taskData);\r\n        }\r\n    }\r\n\r\n    const handleLogout = function(){\r\n        props.handleLogout();\r\n    };\r\n\r\n    const handleCreate = function(){\r\n        props.history.push('/create-task');\r\n    }\r\n\r\n    const handleEdit = (row) => {\r\n        const taskId = row._id;\r\n        props.history.push(`/create-task/${taskId}`)\r\n    }\r\n\r\n    const getEditButton = (cell, row) => {\r\n        return <button className=\"btn btn-primary\" onClick={() => handleEdit(row)}>Edit</button>\r\n    }\r\n\r\n    const products = tasks;\r\n    const columns = [{\r\n    dataField: 'taskName',\r\n    text: 'Record Name'\r\n    }, {\r\n    dataField: 'taskCategory',\r\n    text: 'Category'\r\n    }, {\r\n    dataField: 'taskDescription',\r\n    text: 'Description'\r\n    },\r\n    {\r\n        dataField: 'taskValues',\r\n        text: 'Actions',\r\n        formatter : getEditButton\r\n    }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"tasks-page\">\r\n            <div className=\"row records\">\r\n                <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                    <label className=\"records-label\">Records</label>\r\n                </div>\r\n                <div className=\"col-md-5 col-sm-5 col-lg-5\"></div>\r\n                <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                    <button className=\"btn btn-primary record-button\" onClick={handleCreate} >Create a Record</button>\r\n                </div>\r\n                <div className=\"col-md-1 col-sm-1 col-lg-1\">\r\n                    <button className=\"btn btn-primary\" onClick={handleLogout}>Logout</button>\r\n                </div>\r\n            </div>\r\n            <BootstrapTable keyField='_id' data={ products } columns={ columns } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TasksView\r\n","import React from 'react'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport CreateTask from '../Components/CreateTask'\r\nimport TasksView from '../Components/TasksView'\r\n\r\nfunction RouterPaths(props) {    \r\n    const handleLogout = props.handleLogout;\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path='/' exact component={(props) => (<TasksView handleLogout={handleLogout} {...props} />)}/>\r\n                    <Route path='/tasks' exact component={(props) => (<TasksView handleLogout={handleLogout} {...props}/>)}/>\r\n                    <Route path='/create-task' exact component={(props) => (<CreateTask {...props}/>)}/>\r\n                    <Route path='/create-task/:taskId' exact component={(props) => (<CreateTask {...props}/>)}/>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RouterPaths\r\n","import React, {useState} from 'react'\nimport './App.css';\nimport LoginSignup from './Pages/LoginSignup'\nimport RouterPaths from './Pages/RouterPaths'\nimport UserContext from \"./Components/UserContext\";\n\nfunction App() {\n\n  const [userData,setUserData] = useState({\n    authToken:localStorage.getItem(\"authToken\"),\n    user:JSON.parse(localStorage.getItem(\"user\")),\n  });\n\n  const handleLogin = async function(loginCredentials){\n    const response = await fetch('/users/login', {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json',\n            }, \n            body: JSON.stringify(loginCredentials)\n        });\n      const userData = await response.json()\n      if(userData.error){\n        alert(userData.error)\n      }else{\n        initializeLocalStorage(userData);\n      }\n  }\n\n  const handleLogout = async function(){\n    const response = await fetch('/users/logout', {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json',\n            authToken : localStorage.getItem(\"authToken\")\n            }, \n        });\n    const responseJson = await response.json();\n    if(responseJson.error){\n      alert(responseJson.error);\n    }else{\n      emptyLocalStorage();\n    }        \n  }\n\n  const emptyLocalStorage = function(){\n    localStorage.clear();\n    setUserData({});\n  }\n\n  const initializeLocalStorage = function(userData){\n    localStorage.setItem(\"authToken\",userData.token);\n    localStorage.setItem(\"user\",JSON.stringify(userData.user));\n    setUserData({\n      authToken:userData.token,\n      user:userData.user\n    });\n  }\n\n  const pageToShow = \n    (userData.authToken && userData.user) ?\n    (<UserContext.Provider value={userData}>\n       <RouterPaths handleLogout={handleLogout} />\n    </UserContext.Provider>)\n    :\n       <LoginSignup handleLogin={handleLogin} />\n\n  return (\n    <div className=\"App\">\n      {pageToShow}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}