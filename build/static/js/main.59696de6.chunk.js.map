{"version":3,"sources":["Components/Login.js","Pages/LoginSignup.js","Components/UserContext.js","Components/CreateTask.js","Components/TasksView.js","Pages/RouterPaths.js","App.js","index.js"],"names":["Login","props","useState","userName","setUserName","password","setPassword","className","type","placeholder","onChange","event","target","value","onClick","handleLogin","alert","LoginSignup","UserContext","React","createContext","authToken","user","CreateTask","rows","setRows","taskName","setTaskName","taskCategory","setTaskCategory","taskDesc","setTaskDesc","taskValues","setTaskValues","rowId","setRowId","useContext","taskId","useParams","ref","useRef","useEffect","fetchTaskById","console","log","current","a","fetch","method","headers","response","json","taskData","error","taskDescription","showValues","values","i","tableRows","vals","length","key","concat","name","id","defaultValue","propName","handleChange","propValue","style","width","handleRemove","push","handleSave","task","JSON","parse","stringify","filter","val","body","data","history","e","index","parseInt","tempData","tempRows","item","children","joined","TasksView","tasks","setTasks","fetchTasks","products","columns","dataField","text","formatter","cell","row","_id","handleEdit","handleLogout","keyField","RouterPaths","path","exact","component","App","localStorage","getItem","userData","setUserData","loginCredentials","initializeLocalStorage","responseJson","emptyLocalStorage","clear","setItem","token","pageToShow","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59696de6.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport './Login.css'\r\n\r\nfunction Login(props) {\r\n    const [userName,setUserName] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n\r\n    const handleUserNameChange = function(event){\r\n        setUserName(event.target.value);\r\n    };\r\n    const handlePasswordChange = function(event){\r\n        setPassword(event.target.value);\r\n    };\r\n\r\n    const handleLogin = function(){\r\n        if(userName!=\"\" && password!=\"\")\r\n            props.handleLogin({userName,password});\r\n        else\r\n            alert('All fields are compulsory!');\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-page col-md-12 col-sm-12 col-lg-12\">\r\n            <div className=\"row col-md-12 col-sm-12 col-lg-12\">\r\n                <div className=\"col-sm-4 col-lg-4 col-md-4\"></div>\r\n                <div className=\"title col-sm-4 col-lg-4 col-sm-4\">EasyMaintain Login</div>\r\n                <div className=\"col-sm-4 col-lg-4 col-md-4\"></div>\r\n            </div>\r\n            <div className=\"row col-md-12 col-sm-12 col-lg-12\">\r\n                <div className=\"col-sm-4 col-lg-4 col-md-4\"></div>\r\n                <div className=\"col-sm-4 col-lg-4 col-md-4 row\">\r\n                    <div className=\"col-sm-6 col-lg-6 col-md-6 fields\">\r\n                        <label className=\"labelClass\">UserName</label>\r\n                    </div>\r\n                    <div className=\"col-sm-6 col-lg-6 col-md-6\">\r\n                        <input type=\"text\" placeholder=\"Enter your username\" onChange={handleUserNameChange}></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-4 col-lg-4 col-md-4\"></div>\r\n            </div>\r\n            <div className=\"row col-md-12 col-sm-12 col-lg-12\">\r\n                <div className=\"col-sm-4 col-lg-4 col-md-4\"></div>\r\n                <div className=\"col-sm-4 col-lg-4 col-md-4 row\">\r\n                    <div className=\"col-sm-6 col-lg-6 col-md-6 fields\">\r\n                        <label className=\"labelClass\">Password</label>\r\n                    </div>\r\n                    <div className=\"col-sm-6 col-lg-6 col-md-6\">\r\n                        <input type=\"password\" placeholder=\"Enter your password\" onChange={handlePasswordChange}></input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-12 col-sm-12 col-lg-12\">\r\n                <div className=\"login-div\">\r\n                    <button className=\"btn btn-primary login-btn\" onClick={handleLogin}>Login</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"created-by col-md-12 col-sm-12 col-lg-12\">Created by Athang using MERN stack<br />Nothing to worry even if your Records are Athang ;)</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport Login from \"../Components/Login\";\r\n\r\nfunction LoginSignup(props) {\r\n    return (\r\n        <div>\r\n            <Login handleLogin={props.handleLogin}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginSignup\r\n","import React from \"react\";\r\n\r\nconst UserContext = React.createContext({\r\n    authToken:\"\",\r\n    user:{}\r\n});\r\n\r\nexport default UserContext;","import React, {useState,useContext, useEffect, useRef} from 'react'\r\nimport './TasksView.css'\r\nimport UserContext from \"./UserContext\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nfunction CreateTask(props) {\r\n    const [rows, setRows] = useState([]);\r\n    const [taskName, setTaskName] = useState('');\r\n    const [taskCategory, setTaskCategory] = useState('');\r\n    const [taskDesc, setTaskDesc] = useState('');\r\n    const [taskValues, setTaskValues] = useState([]);\r\n    const [rowId, setRowId] = useState(0);\r\n    const {authToken}=useContext(UserContext);\r\n    const {taskId} = useParams();\r\n    const ref = useRef([taskValues, rows])\r\n\r\n    useEffect(() => {\r\n        if(taskId){\r\n            fetchTaskById();\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        console.log(ref.current)\r\n        ref.current = [taskValues, rows];\r\n        console.log(ref.current)\r\n    })\r\n\r\n    const fetchTaskById = async function(){\r\n        const response = await fetch(`/tasks/${taskId}`, {\r\n            method: 'GET', \r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n             authToken: authToken\r\n            },\r\n        });\r\n        const taskData = await response.json();\r\n        if(taskData.error){\r\n            alert(taskData.error);\r\n        }else{\r\n            setTaskName(taskData.taskName)\r\n            setTaskValues(taskData.taskValues)\r\n            setTaskCategory(taskData.taskCategory)\r\n            setTaskDesc(taskData.taskDescription)\r\n            showValues(taskData.taskValues)\r\n        }\r\n    }\r\n\r\n    const showValues = function(values){\r\n        var i=0;\r\n        var tableRows =[];\r\n        var vals = [];\r\n        console.log(values);\r\n        console.log(ref.current);\r\n        console.log(taskValues);\r\n        for(i;i<values.length;i++){\r\n            const key = i;\r\n            tableRows = tableRows.concat(\r\n                <tr>\r\n                    <td>\r\n                        <input name='propName' id={key} defaultValue={values[i].propName} onChange={handleChange} type=\"text\"></input>\r\n                    </td>\r\n                    <td>\r\n                        <input name=\"propValue\" id={key} defaultValue={values[i].propValue} onChange={handleChange} type=\"text\" style={{width:'450px'}}></input>\r\n                    </td>\r\n                    <td>\r\n                        <button id={key} className=\"btn btn-primary\" onClick={handleRemove}>Remove</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n            vals.push({id : key, propName : values[i].propName, propValue:values[i].propName});\r\n        }\r\n        setRowId(i);\r\n        setRows(tableRows);\r\n        setTaskValues(vals);\r\n    }\r\n    \r\n    const handleSave = async function(){ \r\n        if(taskName==\"\" || taskCategory==\"\" || taskDesc==\"\")\r\n            alert('Record Name, Category and Description are mandatory');\r\n        else{\r\n            var task = {};\r\n            task.taskName = taskName;\r\n            task.taskCategory = taskCategory;\r\n            task.taskDescription = taskDesc;\r\n            var values = JSON.parse(JSON.stringify(ref.current[0]));\r\n            values = values.filter( val => (val.propName!==\"\" || val.propValue!==\"\"));\r\n            task.taskValues = values;\r\n            var response;\r\n            if(taskId){\r\n                response = await fetch(`/tasks/${taskId}`, {\r\n                    method: 'PATCH', \r\n                    headers: {\r\n                    'Content-Type': 'application/json',\r\n                     authToken: authToken\r\n                    },\r\n                    body: JSON.stringify(task)\r\n                });\r\n            }\r\n            else{\r\n                response = await fetch('/tasks', {\r\n                    method: 'POST', \r\n                    headers: {\r\n                    'Content-Type': 'application/json',\r\n                     authToken: authToken\r\n                    },\r\n                    body: JSON.stringify(task)\r\n                });\r\n            }\r\n    \r\n            const data = await response.json();\r\n            if(data.error){\r\n                alert(data.error);\r\n            }else{\r\n                props.history.push(\"/tasks\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const appendRow = function(e){\r\n        const key = rowId;\r\n        var joined = rows.concat(\r\n            <tr>\r\n                <td>\r\n                    <input name='propName' id={key} onChange={handleChange} type=\"text\"></input>\r\n                </td>\r\n                <td>\r\n                    <input name=\"propValue\" id={key} onChange={handleChange} type=\"text\" style={{width:'450px'}}></input>\r\n                </td>\r\n                <td>\r\n                    <button id={key} className=\"btn btn-primary\" onClick={handleRemove}>Remove</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n        setRows(joined);\r\n        const vals = taskValues;\r\n        vals.push({id : key, propName : '', propValue:''});\r\n        setTaskValues(vals);\r\n        setRowId(key+1);\r\n    }\r\n\r\n    const appendRowArea = function(e){\r\n        const key = rowId;\r\n        var joined = rows.concat(\r\n            <tr id={key}>\r\n                <td>\r\n                    <input name='propName' id={key} onChange={handleChange} type=\"text\"></input>\r\n                </td>\r\n                <td>\r\n                    <textarea name=\"propValue\" id={key} onChange={handleChange} type=\"text\" style={{width:'450px'}}></textarea>\r\n                </td>\r\n                <td>\r\n                    <button id={key} className=\"btn btn-primary\" onClick={handleRemove}>Remove</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n        setRows(joined);\r\n        const vals = taskValues;\r\n        vals.push({id : key, propName : '', propValue:''});\r\n        setTaskValues(vals);\r\n        setRowId(key+1);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        var val = e.target.value;\r\n        var index = parseInt(e.target.id);\r\n        var vals = ref.current[0];\r\n        if(e.target.name==\"propName\")\r\n            vals[index].propName = e.target.value;\r\n        else if(e.target.name=\"propValue\")\r\n            vals[index].propValue = e.target.value;\r\n        setTaskValues(vals);\r\n    }\r\n\r\n    const handleBack = function(e){\r\n        props.history.push('/tasks');\r\n    }\r\n\r\n    const handleRemove = function(e){\r\n        var index = parseInt(e.target.id);\r\n        let tempData = ref.current[0];\r\n        let tempRows = ref.current[1];\r\n        tempData = tempData.filter((item)=> item.id!==index)\r\n        tempRows = tempRows.filter((item)=> item.props.children[0].props.children.props.id!==index)\r\n        setTaskValues(tempData);\r\n        setRows(tempRows);\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-tasks-page\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 col-lg-3 col-sm-3\">\r\n                    <label className=\"create-task-label\">Create Record</label>\r\n                </div>\r\n                <div className=\"col-md-6 col-lg-6 col-sm-6\"></div>\r\n                <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                    <button className=\"btn btn-primary save-button\" onClick={handleSave}>Save</button>\r\n                    <button className=\"btn btn-primary save-button\" onClick={handleBack}>Back</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row create-task-input\">\r\n                <div className=\"col-md-1 col-lg-1 col-sm-1\"></div>\r\n                <div className=\"col-md-10 col-lg-10 col-sm-10\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 col-sm-2 col-lg-2\">\r\n                            <label>Record Name</label>\r\n                        </div>\r\n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                            <input type=\"text\" value={taskName} onChange = { e => setTaskName(e.target.value)}></input>\r\n                        </div>\r\n                        <div className=\"col-md-7 col-sm-7 col-lg-7\"></div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 col-sm-2 col-lg-2\">\r\n                            <label>Record Category</label>\r\n                        </div>\r\n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                            <input value={taskCategory} onChange = { e => setTaskCategory(e.target.value)} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"col-md-7 col-sm-7 col-lg-7\"></div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 col-sm-2 col-lg-2\">\r\n                            <label>Record Description</label>\r\n                        </div>\r\n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                            <input value={taskDesc} onChange = { e => setTaskDesc(e.target.value)} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"col-md-7 col-sm-7 col-lg-7\"></div>\r\n                    </div>\r\n                    <div>\r\n                        <label>Record Values:</label>\r\n                    </div>\r\n                    <div className=\"values-table\">\r\n                        <table>\r\n                            <thead>\r\n                                <th style={{width: '300px'}}>Property Name</th>\r\n                                <th style={{width: '600px'}}>Property Value</th>\r\n                                <th style={{width: '300px'}}>Action</th>\r\n                            </thead>\r\n                            <tbody>\r\n                                {rows}\r\n                            </tbody>\r\n                        </table>\r\n                        <button className=\"btn btn-primary add-button\" onClick={appendRow}>Add Row with TextBox</button>\r\n                        <button className=\"btn btn-primary add-area\" onClick={appendRowArea}>Add Row with TextArea</button>\r\n                    </div>   \r\n                </div>\r\n                <div className=\"col-md-1 col-sm-1 col-lg-1\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateTask\r\n","import React,{useState,useEffect,useContext} from 'react';\r\nimport './TasksView.css'\r\nimport \"@progress/kendo-theme-material/dist/all.css\";\r\nimport { Grid, GridColumn } from \"@progress/kendo-react-grid\";\r\nimport UserContext from \"./UserContext\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\n\r\nfunction TasksView(props) {\r\n    const [tasks, setTasks] = useState([]);\r\n    const {authToken,user}=useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        fetchTasks();\r\n    }, []);\r\n\r\n    const fetchTasks = async function(){\r\n        const response = await fetch('/tasks',{\r\n            method: 'GET', \r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n             authToken: authToken\r\n            },\r\n        });\r\n        const taskData = await response.json();\r\n        if(taskData.error){\r\n            alert(taskData.error);\r\n        }\r\n        else{\r\n            setTasks(taskData);\r\n        }\r\n    }\r\n\r\n    const handleLogout = function(){\r\n        props.handleLogout();\r\n    };\r\n\r\n    const handleCreate = function(){\r\n        props.history.push('/create-task');\r\n    }\r\n\r\n    const handleEdit = (row) => {\r\n        const taskId = row._id;\r\n        props.history.push(`/create-task/${taskId}`)\r\n    }\r\n\r\n    const getEditButton = (cell, row) => {\r\n        return <button className=\"btn btn-primary\" onClick={() => handleEdit(row)}>Edit</button>\r\n    }\r\n\r\n    const products = tasks;\r\n    const columns = [{\r\n    dataField: 'taskName',\r\n    text: 'Record Name'\r\n    }, {\r\n    dataField: 'taskCategory',\r\n    text: 'Category'\r\n    }, {\r\n    dataField: 'taskDescription',\r\n    text: 'Description'\r\n    },\r\n    {\r\n        dataField: 'taskValues',\r\n        text: 'Actions',\r\n        formatter : getEditButton\r\n    }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"tasks-page\">\r\n            <div className=\"row records\">\r\n                <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                    <label className=\"records-label\">Records</label>\r\n                </div>\r\n                <div className=\"col-md-6 col-sm-6 col-lg-6\"></div>\r\n                <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                    <button className=\"btn btn-primary record-button\" onClick={handleCreate} >Create a Record</button>\r\n                    <button className=\"btn btn-primary\" onClick={handleLogout}>Logout</button>\r\n                </div>\r\n            </div>\r\n            <BootstrapTable keyField='_id' data={ products } columns={ columns } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TasksView\r\n","import React from 'react'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport CreateTask from '../Components/CreateTask'\r\nimport TasksView from '../Components/TasksView'\r\n\r\nfunction RouterPaths(props) {    \r\n    const handleLogout = props.handleLogout;\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path='/' exact component={(props) => (<TasksView handleLogout={handleLogout} {...props} />)}/>\r\n                    <Route path='/tasks' exact component={(props) => (<TasksView handleLogout={handleLogout} {...props}/>)}/>\r\n                    <Route path='/create-task' exact component={(props) => (<CreateTask {...props}/>)}/>\r\n                    <Route path='/create-task/:taskId' exact component={(props) => (<CreateTask {...props}/>)}/>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RouterPaths\r\n","import React, {useState} from 'react'\nimport './App.css';\nimport LoginSignup from './Pages/LoginSignup'\nimport RouterPaths from './Pages/RouterPaths'\nimport UserContext from \"./Components/UserContext\";\n\nfunction App() {\n\n  const [userData,setUserData] = useState({\n    authToken:localStorage.getItem(\"authToken\"),\n    user:JSON.parse(localStorage.getItem(\"user\")),\n  });\n\n  const handleLogin = async function(loginCredentials){\n    const response = await fetch('/users/login', {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json',\n            }, \n            body: JSON.stringify(loginCredentials)\n        });\n      const userData = await response.json()\n      if(userData.error){\n        alert(userData.error)\n      }else{\n        initializeLocalStorage(userData);\n      }\n  }\n\n  const handleLogout = async function(){\n    const response = await fetch('/users/logout', {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json',\n            authToken : localStorage.getItem(\"authToken\")\n            }, \n        });\n    const responseJson = await response.json();\n    if(responseJson.error){\n      alert(responseJson.error);\n    }else{\n      emptyLocalStorage();\n    }        \n  }\n\n  const emptyLocalStorage = function(){\n    localStorage.clear();\n    setUserData({});\n  }\n\n  const initializeLocalStorage = function(userData){\n    localStorage.setItem(\"authToken\",userData.token);\n    localStorage.setItem(\"user\",JSON.stringify(userData.user));\n    setUserData({\n      authToken:userData.token,\n      user:userData.user\n    });\n  }\n\n  const pageToShow = \n    (userData.authToken && userData.user) ?\n    (<UserContext.Provider value={userData}>\n       <RouterPaths handleLogout={handleLogout} />\n    </UserContext.Provider>)\n    :\n       <LoginSignup handleLogin={handleLogin} />\n\n  return (\n    <div className=\"App\">\n      {pageToShow}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}