{"version":3,"sources":["Pages/LoginSignup.js","Components/TasksView.js","Components/CreateTask.js","Pages/RouterPaths.js","App.js","index.js"],"names":["LoginSignup","valuesCell","props","className","TasksView","useState","tasks","setTasks","authToken","useEffect","fetchTasks","a","fetch","method","headers","Authorization","response","json","taskData","error","alert","grid","data","field","title","cell","onClick","history","push","handleLogout","CreateTask","rows","setRows","taskName","setTaskName","taskCategory","setTaskCategory","taskDesc","setTaskDesc","taskValues","setTaskValues","rowId","setRowId","handleSave","task","values","JSON","parse","stringify","filter","val","propName","propValue","body","handleChange","e","target","value","index","parseInt","id","vals","name","type","onChange","style","width","key","joined","concat","RouterPaths","path","exact","component","App","localStorage","getItem","user","userData","setUserData","responseJson","emptyLocalStorage","clear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f345c71.chunk.js","sourcesContent":["import React from 'react'\r\nimport Login from \"../Components/Login\";\r\n\r\nfunction LoginSignup(props) {\r\n    return (\r\n        <div>\r\n            <Login handleLogin={props.handleLogin}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginSignup\r\n","import React,{useState,useEffect} from 'react';\r\nimport './TasksView.css'\r\nimport \"@progress/kendo-theme-material/dist/all.css\";\r\nimport { Grid, GridColumn } from \"@progress/kendo-react-grid\";\r\n\r\nconst valuesCell = (props) => {\r\n    return (\r\n      <td><button className=\"btn btn-primary\">Edit</button></td>\r\n    )\r\n} \r\n\r\nfunction TasksView(props) {\r\n    const [tasks, setTasks] = useState([]);\r\n    const authToken = props.authToken;\r\n    //const user = props.user;\r\n\r\n    useEffect(() => {\r\n        fetchTasks();\r\n    }, []);\r\n\r\n    const fetchTasks = async function(){\r\n        const response = await fetch('/tasks',{\r\n            method: 'GET', \r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n             Authorization: authToken\r\n            },\r\n        });\r\n        const taskData = await response.json();\r\n        if(taskData.error){\r\n            alert(taskData.error);\r\n        }\r\n        else{\r\n            setTasks(taskData);\r\n        }\r\n    }\r\n\r\n    const handleLogout = function(){\r\n        props.handleLogout();\r\n    };\r\n\r\n    const handleCreate = function(){\r\n        props.history.push('/create-task');\r\n    }\r\n\r\n    const grid = <Grid\r\n    data={tasks}\r\n    >\r\n    <GridColumn field=\"taskName\" title=\"Name\" />\r\n    <GridColumn field=\"taskCategory\" title=\"Category\" />\r\n    <GridColumn field=\"taskDescription\" title=\"Description\" />\r\n    <GridColumn field=\"taskValues\" title=\"Actions\" cell={valuesCell}/>\r\n  </Grid>\r\n\r\n    return (\r\n        <div className=\"tasks-page\">\r\n            <div className=\"row records\">\r\n                <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                    <label className=\"records-label\">Records</label>\r\n                </div>\r\n                <div className=\"col-md-6 col-sm-6 col-lg-6\"></div>\r\n                <div className=\"col-md-2 col-sm-2 col-lg-2\">\r\n                    <button className=\"btn btn-primary record-button\" onClick={handleCreate} >Create a Record</button>\r\n                </div>\r\n                <div className=\"col-md-1 col-sm-1 col-lg-1\">\r\n                    <button className=\"btn btn-primary\" onClick={handleLogout}>Logout</button>\r\n                </div>\r\n            </div>\r\n            {grid}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TasksView\r\n","import React, {useState} from 'react'\r\nimport RouterPaths from '../Pages/RouterPaths'\r\nimport TasksView from './TasksView';\r\nimport './TasksView.css'\r\n\r\nfunction CreateTask(props) {\r\n    const [rows, setRows] = useState([]);\r\n    const [taskName, setTaskName] = useState('');\r\n    const [taskCategory, setTaskCategory] = useState('');\r\n    const [taskDesc, setTaskDesc] = useState('');\r\n    const [taskValues, setTaskValues] = useState([]);\r\n    const [rowId, setRowId] = useState(0);\r\n    \r\n    const handleSave = async function(){ \r\n        if(taskName==\"\" || taskCategory==\"\" || taskDesc==\"\")\r\n            alert('Record Name, Category and Description are mandatory');\r\n        else{\r\n            var task = {};\r\n            task.taskName = taskName;\r\n            task.taskCategory = taskCategory;\r\n            task.taskDesc = taskDesc;\r\n            var values = JSON.parse(JSON.stringify(taskValues));\r\n            values = values.filter( val => (val.propName!==\"\" || val.propValue!==\"\"));\r\n            task.taskValues = values;\r\n            const response = await fetch('/tasks', {\r\n                method: 'POST', \r\n                headers: {\r\n                'Content-Type': 'application/json',\r\n                 authToken: props.authToken\r\n                },\r\n                body: JSON.stringify(task)\r\n            });\r\n    \r\n            const data = await response.json();\r\n            if(data.error){\r\n                alert(data.error);\r\n            }else{\r\n                props.history.push(\"/tasks\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const appendRow = function(e){\r\n        const key = rowId;\r\n        var joined = rows.concat(\r\n            <tr>\r\n                <td>\r\n                    <input name='propName' id={key} onChange={handleChange} type=\"text\"></input>\r\n                </td>\r\n                <td>\r\n                    <input name=\"propValue\" id={key} onChange={handleChange} type=\"text\" style={{width:'450px'}}></input>\r\n                </td>\r\n            </tr>\r\n        )\r\n        setRows(joined);\r\n        const vals = taskValues;\r\n        vals.push({id : key, propName : '', propValue:''});\r\n        setTaskValues(vals);\r\n        setRowId(key+1);\r\n    }\r\n\r\n    const appendRowArea = function(e){\r\n        const key = rowId;\r\n        var joined = rows.concat(\r\n            <tr>\r\n                <td>\r\n                    <input name='propName' id={key} onChange={handleChange} type=\"text\"></input>\r\n                </td>\r\n                <td>\r\n                    <textarea name=\"propValue\" id={key} onChange={handleChange} type=\"text\" style={{width:'450px'}}></textarea>\r\n                </td>\r\n            </tr>\r\n        )\r\n        setRows(joined);\r\n        const vals = taskValues;\r\n        vals.push({id : key, propName : '', propValue:''});\r\n        setTaskValues(vals);\r\n        setRowId(key+1);\r\n    }\r\n\r\n    const handleChange = function(e){\r\n        var val = e.target.value;\r\n        var index = parseInt(e.target.id);\r\n        var vals = taskValues;\r\n        if(e.target.name==\"propName\")\r\n            vals[index].propName = e.target.value;\r\n        else if(e.target.name=\"propValue\")\r\n            vals[index].propValue = e.target.value;\r\n        setTaskValues(vals);\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-tasks-page\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 col-lg-3 col-sm-3\">\r\n                    <label className=\"create-task-label\">Create Record</label>\r\n                </div>\r\n                <div className=\"col-md-7 col-lg-7 col-sm-7\"></div>\r\n                <div className=\"col-md-2 col-sm-2 col-lg-2\">\r\n                    <button className=\"btn btn-primary save-button\" onClick={handleSave}>Save</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row create-task-input\">\r\n                <div className=\"col-md-1 col-lg-1 col-sm-1\"></div>\r\n                <div className=\"col-md-10 col-lg-10 col-sm-10\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 col-sm-2 col-lg-2\">\r\n                            <label>Record Name</label>\r\n                        </div>\r\n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                            <input type=\"text\" onChange = { e => setTaskName(e.target.value)}></input>\r\n                        </div>\r\n                        <div className=\"col-md-7 col-sm-7 col-lg-7\"></div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 col-sm-2 col-lg-2\">\r\n                            <label>Record Category</label>\r\n                        </div>\r\n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                            <input onChange = { e => setTaskCategory(e.target.value)} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"col-md-7 col-sm-7 col-lg-7\"></div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 col-sm-2 col-lg-2\">\r\n                            <label>Record Description</label>\r\n                        </div>\r\n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">\r\n                            <input onChange = { e => setTaskDesc(e.target.value)} type=\"text\"></input>\r\n                        </div>\r\n                        <div className=\"col-md-7 col-sm-7 col-lg-7\"></div>\r\n                    </div>\r\n                    <div>\r\n                        <label>Record Values:</label>\r\n                    </div>\r\n                    <div className=\"values-table\">\r\n                        <table>\r\n                            <thead>\r\n                                <th style={{width: '300px'}}>Property Name</th>\r\n                                <th style={{width: '600px'}}>Property Value</th>\r\n                            </thead>\r\n                            <tbody>\r\n                                {rows}\r\n                            </tbody>\r\n                        </table>\r\n                        <button className=\"btn btn-primary add-button\" onClick={appendRow}>Add Row with TextBox</button>\r\n                        <button className=\"btn btn-primary add-area\" onClick={appendRowArea}>Add Row with TextArea</button>\r\n                    </div>   \r\n                </div>\r\n                <div className=\"col-md-1 col-sm-1 col-lg-1\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateTask\r\n","import React from 'react'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport CreateTask from '../Components/CreateTask'\r\nimport TasksView from '../Components/TasksView'\r\n\r\nfunction RouterPaths() {\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path='/' exact component={TasksView}/>\r\n                    <Route path='/tasks' exact component={TasksView}/>\r\n                    <Route path='/create-task' exact component={CreateTask}/>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RouterPaths\r\n","import React, {useState} from 'react'\nimport './App.css';\nimport LoginSignup from './Pages/LoginSignup'\nimport TasksView from './Components/TasksView'\nimport RouterPaths from './Pages/RouterPaths'\n\nfunction App() {\n\n  const [userData,setUserData] = useState({\n    authToken:localStorage.getItem(\"authToken\"),\n    user:JSON.parse(localStorage.getItem(\"user\")),\n  });\n\n  const handleLogin = async function(loginCredentials){\n    const response = await fetch('/users/login', {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json',\n            }, \n            body: JSON.stringify(loginCredentials)\n        });\n      const userData = await response.json()\n      if(userData.error){\n        alert(userData.error)\n      }else{\n        initializeLocalStorage(userData);\n      }\n  }\n\n  const handleLogout = async function(){\n    const response = await fetch('/users/logout', {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json',\n            authToken : localStorage.getItem(\"authToken\")\n            }, \n        });\n    const responseJson = await response.json();\n    if(responseJson.error){\n      alert(responseJson.error);\n    }else{\n      emptyLocalStorage();\n    }        \n  }\n\n  const emptyLocalStorage = function(){\n    localStorage.clear();\n    setUserData({});\n  }\n\n  const initializeLocalStorage = function(userData){\n    localStorage.setItem(\"authToken\",userData.token);\n    localStorage.setItem(\"user\",JSON.stringify(userData.user));\n    setUserData({\n      authToken:userData.token,\n      user:userData.user\n    });\n  }\n\n  const pageToShow = \n    (userData.authToken && userData.user) ?\n       <TasksView authToken={userData.authToken} user={userData.user} handleLogout={handleLogout} />\n    :\n       <LoginSignup handleLogin={handleLogin} />\n\n  return (\n    <div className=\"App\">\n      {/* {pageToShow} */}\n      <RouterPaths authToken={userData.authToken} user={userData.user} handleLogout={handleLogout} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}